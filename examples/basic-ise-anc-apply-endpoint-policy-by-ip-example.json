[
    {
        "id": "530e3a76.6a49d4",
        "type": "tab",
        "label": "ISE ANC Apply Endpoint Policy By IP Address Example",
        "disabled": false,
        "info": "This sample applies a Cisco Adaptive Network Control (ANC) policy to an\r\nendpoint via DXL and Cisco pxGrid. The sample identifies the endpoint by its IP\r\naddress. The payload from the response received for the Cisco pxGrid request is\r\nprinted to the Node-RED `debug` tab.\r\n\r\n### Prerequisites\r\n\r\n* The samples configuration step has been completed (see the\r\n  [DXL Configuration Sample](https://github.com/opendxl/node-red-contrib-dxl/wiki/Client-Configuration)).\r\n* The DXL fabric to which the client will connect has been bridged to Cisco\r\n  pxGrid.\r\n* The DXL client associated with the `Apply quarantine policy to endpoint` node has been authorized to perform `DXL Cisco pxGrid Queries`\r\n  (see [Authorize Client to Use Cisco pxGrid via DXL](https://opendxl.github.io/opendxl-pxgrid-client-python/pydoc/pxgridauth.html)).\r\n* A session has been established with the Cisco Identity Services Engine (ISE)\r\n  server for an endpoint. The endpoint's IP address will be used when running\r\n  this example. For an example on creating a simulated session for testing, see\r\n  the Cisco RADIUS Simulator command examples in the\r\n  [Basic pxGrid Session Notification Example](https://opendxl.github.io/opendxl-pxgrid-client-python/pydoc/basicidentitysessionnotificationexample.html)\r\n  from the Cisco pxGrid Python client SDK.\r\n* An ANC policy named `quarantine_policy` has been configured. The policy\r\n  could be created by logging into the ISE web interface and performing the\r\n  following steps:\r\n\r\n  * Navigate to **Operations** ▶ **Adaptive Network Control** ▶ \r\n    **Policy List**.\r\n  * On the **List** screen, click on the **Add** button.\r\n  * On the **List** ▶ **New** screen, enter `quarantine_policy` in the\r\n    **name** field, select `QUARANTINE` in the **Action** field, and press\r\n    the **Submit** button.\r\n\r\n### Setup\r\n\r\n* Edit the `Specify IP address` node and modify the `Payload` property with the\r\n IP address of an endpoint for which to apply the `quarantine_policy`. For example:\r\n\r\n ```\r\n 192.168.1.1\r\n ```\r\n\r\n* To deploy the flow, press the `Deploy` button in the upper-right corner of the\r\n  screen. If Node-RED is able to properly connect to the DXL fabric, a green dot\r\n  with the word `connected` should appear under the\r\n  `Apply quarantine policy to endpoint` node.\r\n\r\n### Running\r\n\r\nTo exercise the flow, double-click the button on the left side of the\r\n`Specify IP address` node.\r\n\r\n### Output\r\n\r\nIf the policy can be applied successfully, the following message will be\r\ndisplayed to the Node-RED `debug` tab:\r\n\r\n```\r\n▶ { ancStatus: \"success\" }\r\n```\r\n\r\nIf the policy has already been associated with the endpoint before the example\r\nis run, the flow is halted with an `error.message` similar to the following:\r\n\r\n```\r\nmac address is already associated with this policy error associated with ip 192.168.1.1\r\n```\r\n\r\nIf the policy has not been defined before the example is run, the flow is halted\r\nwith an `error.message` similar to the following:\r\n\r\n```\r\nPolicy is not configured error associated with ip 192.168.1.1\r\n```\r\n\r\nIf no session has been established for an endpoint which corresponds to the IP\r\naddress, the flow is halted with an `error.message` similar to the following:\r\n\r\n```\r\nSession lookup failure error associated with ip 192.168.1.1\r\n```\r\n\r\n### Details\r\n\r\nThe flow exercises the nodes below.\r\n\r\n#### Specify IP address\r\n\r\nThis is an `inject` input node which starts the flow. This node injects a new\r\nmessage with a `payload` property which specifies the IP address of an endpoint.\r\n\r\n#### Set IP address request parameter\r\n\r\nThis is a `change` node which copies the value from the `payload` message\r\nproperty to the `ipAddress` property. The `Apply quarantine policy to endpoint`\r\nnode uses the `ipAddress` property when constructing the parameters for the\r\nCisco pxGrid apply endpoint policy request. \r\n\r\n#### Apply quarantine policy to endpoint\r\n\r\nThis is an `ise anc apply endpoint policy by ip` node. This node connects to the DXL\r\nfabric and sends a DXL `Request` message to Cisco pxGrid service to apply the\r\npolicy to the endpoint.\r\n\r\nThe request message includes the `ipAddress` property set by the\r\n`Set IP address request parameter` node.\r\n\r\nThe `Policy name` property is set to \"quarantine_policy\".\r\n\r\nThe `Return` property is set to \"a parsed JSON object\" to indicate that the\r\npayload for the response should be added to the output message as a JavaScript\r\nobject decoded from JSON.\r\n\r\n#### Output result\r\n\r\nThis is a `debug` output node. This node outputs the `payload` set on the\r\nmessage by the `Apply quarantine policy to endpoint` node. If the apply\r\nendpoint policy request succeeded, the object written to the Node-RED `debug`\r\nwindow should contain a property with a key of \"ancStatus\" and associated value\r\nof \"success\"."
    },
    {
        "id": "6cc21cad.8fe6b4",
        "type": "dxl-ise-anc-apply-endpoint-policy-by-ip",
        "z": "530e3a76.6a49d4",
        "name": "Apply quarantine policy to endpoint",
        "policyName": "quarantine_policy",
        "client": "",
        "returnType": "obj",
        "x": 360,
        "y": 260,
        "wires": [
            [
                "51a9427c.5a803c"
            ]
        ]
    },
    {
        "id": "51a9427c.5a803c",
        "type": "debug",
        "z": "530e3a76.6a49d4",
        "name": "Output result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 470,
        "y": 340,
        "wires": []
    },
    {
        "id": "3cbff818.99dd28",
        "type": "inject",
        "z": "530e3a76.6a49d4",
        "name": "Specify IP address",
        "topic": "",
        "payload": "<SPECIFY_IP_ADDRESS>",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 100,
        "wires": [
            [
                "f59b23f2.95d8b"
            ]
        ]
    },
    {
        "id": "f59b23f2.95d8b",
        "type": "change",
        "z": "530e3a76.6a49d4",
        "name": "Set IP address request parameter",
        "rules": [
            {
                "t": "set",
                "p": "ipAddress",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 180,
        "wires": [
            [
                "6cc21cad.8fe6b4"
            ]
        ]
    },
    {
        "id": "8059788c.0b5838",
        "type": "comment",
        "z": "530e3a76.6a49d4",
        "name": "Supply the IP address in the 'Specify IP address' node",
        "info": "",
        "x": 220,
        "y": 40,
        "wires": []
    }
]
