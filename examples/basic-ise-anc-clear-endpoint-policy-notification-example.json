[
    {
        "id": "2b891661.d7d7ba",
        "type": "tab",
        "label": "ISE ANC Clear Endpoint Policy Notification Example",
        "disabled": false,
        "info": "This sample registers for Cisco Adaptive Network Control (ANC) clear endpoint\r\npolicy notifications via DXL and Cisco pxGrid. The payload from the event\r\nreceived for the Cisco pxGrid request is printed to the Node-RED `debug` tab.\r\n\r\n### Prerequisites\r\n\r\n* The samples configuration step has been completed (see the\r\n  [DXL Configuration Sample](https://github.com/opendxl/node-red-contrib-dxl/wiki/Client-Configuration)).\r\n* The DXL fabric to which the client will connect has been bridged to Cisco\r\n  pxGrid.\r\n* The DXL client associated with the\r\n  `Receive ISE ANC clear endpoint policy notification` node has been authorized\r\n  to receive `DXL Cisco pxGrid Notifications`\r\n  (see [Authorize Client to Use Cisco pxGrid via DXL](https://opendxl.github.io/opendxl-pxgrid-client-python/pydoc/pxgridauth.html)).\r\n* ANC `Clear Endpoint Policy` notifications from pxGrid have been enabled\r\n  (see [Enable Cisco pxGrid Notifications for DXL](https://opendxl.github.io/opendxl-pxgrid-client-python/pydoc/pxgridnotifications.html)).\r\n\r\n### Setup\r\n\r\nTo deploy the flow, press the `Deploy` button in the upper-right corner of the\r\nscreen. If Node-RED is able to properly connect to the DXL fabric, a green dot\r\nwith the word `connected` should appear under the\r\n`Receive ISE ANC clear endpoint policy notification` node.\r\n\r\n### Running\r\n\r\nTo generate an clear endpoint policy by IP address notification, run through the\r\nsteps in the `ISE ANC Clear Endpoint Policy by IP Address Example`. With the\r\nflows for both the `ISE ANC Clear Endpoint Policy Notification Example` and\r\n`ISE ANC Clear Endpoint Policy by IP Address Example` loaded in different\r\ntabs, double-click the button on the left side of the `Specify IP address` node\r\non the `ISE ANC Clear Endpoint Policy Notification Example` tab.\r\n\r\n### Output\r\n\r\nIf the policy can be cleared successfully, messages similar to the following\r\nshould be displayed to the Node-RED `debug` tab:\r\n\r\n```\r\n▶ { ipAddress: \"192.168.1.1\" }\r\n```\r\n\r\n```\r\n▶ { ancStatus: \"success\" }\r\n```\r\n\r\nThe message containing the `ipAddress` key is the payload received from the\r\nclear endpoint policy notification.\r\n\r\n### Details\r\n\r\nThe flow exercises the nodes below.\r\n\r\n#### Receive ISE ANC clear endpoint policy notification\r\n\r\nThis is an `ise anc clear endpoint policy notification` node which starts the\r\nflow. This node injects a new message with a `payload` property which contains\r\nthe content of the clear endpoint policy notification.\r\n\r\n#### Output event payload\r\n\r\nThis is a `debug` output node. This node outputs the `payload` set on the\r\nmessage by the `Receive ISE ANC clear endpoint policy notification` node. The\r\npayload object should include a key of \"ipAddress\" and value which corresponds\r\nto the ip address entered in the `Specify IP address` node on the\r\n`ISE ANC Clear Endpoint Policy Notification Example` flow tab."
    },
    {
        "id": "8f8b380e.455538",
        "type": "debug",
        "z": "2b891661.d7d7ba",
        "name": "Output event payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 520,
        "y": 40,
        "wires": []
    },
    {
        "id": "8456f9cd.5d6218",
        "type": "dxl-ise-anc-clear-endpoint-policy in",
        "z": "2b891661.d7d7ba",
        "name": "Receive ISE ANC clear endpoint policy notification",
        "client": "",
        "payloadType": "obj",
        "x": 210,
        "y": 40,
        "wires": [
            [
                "8f8b380e.455538"
            ]
        ]
    }
]
